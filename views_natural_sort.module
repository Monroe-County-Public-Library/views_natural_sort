<?php
/**
 * @file
 * Provides a views filter that sorts titles by a more natural manner by
 * ignoring articles like "The" and "A."
 *
 * Normal sort:
 * A Chorus Line
 * All American
 * Fiddler on the Roof
 * Oklahoma!
 * The King And I
 *
 * Natural sort:
 * All American
 * A Chorus Line
 * Fiddler on the Roof
 * The King And I
 * Oklahoma!
 */

/**
 * Implementation of hook_menu().
 */
function views_natural_sort_menu() {
  $items = array();

  $items['admin/config/views_natural_sort'] = array(
    'title' => 'Views Natural Sort',
    'description' => 'Configuration and settings for natural sorting.',
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  $items['admin/config/views_natural_sort/rebuild'] = array(
    'title' => 'Rebuild Search Index',
    'description' => 'Rebuild Views Natural Sort\'s search index',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('views_natural_sort_settings_form'),
    'access callback' => 'user_access',
    'access arguments' => array('administer views'),
    'file' => 'views_natural_sort.admin.inc',
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implementation of hook_views_api().
 */
function views_natural_sort_views_api() {
  return array(
    'api' => 2.0,
  );
}

/**
 * Implements hook_node_insert().
 *
 * This keeps our natural sort index up to date.
 */
function views_natural_sort_node_insert($node) {
  _views_natural_sort_store_node($node);
}

/**
 * Implementation of hook_node_update().
 *
 * This keeps our natural sort index up to date.
 */
function views_natural_sort_node_update($node) {
  _views_natural_sort_store_node($node);
}

/**
 * Helper function for writing node data to our sort index.
 *
 * @param $node
 * A drupal node object containing at least a nid and title.
 * @return int
 * MergeQuery::STATUS_UPDATE or MergeQuery::STATUS_INSERT
 */
function _views_natural_sort_store_node($node) {
  return db_merge('views_natural_sort')
    ->key(array(
      'nid' => $node->nid,
      'field' => 'title'
    ))
    ->fields(array(
      'nid' => $node->nid,
      'field' => 'title',
      'content' => _views_natural_sort_filter_content($node->title)
    ))
    ->execute();
}

/**
 * Helper function for filtering out what the value we should sort on is.
 * @param $content
 * Original content.
 * @return
 * Filtered value.
 */
function _views_natural_sort_filter_content($content) {
  return preg_replace(array(
    '/^(The|A|An|Le|La|L\'|Un|Une)\s/i',
    '/\s(and|of|or)\s/i',
  ), array(
    '',
    ' ',
  ), $content);
}
